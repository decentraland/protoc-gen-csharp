// AUTOGENERATED, DO NOT EDIT
// Type definitions for server implementations of ports.
// package: 
// file: s1.proto

import * as s1_pb from "./s1_pb";
import { RpcServerPort } from "@dcl/rpc";
import * as codegen from "@dcl/rpc/dist/codegen";

export type BookService = {
  GetBook(arg: s1_pb.GetBookRequest): Promise<s1_pb.Book>;
  QueryBooks(arg: s1_pb.QueryBooksRequest): AsyncGenerator<s1_pb.Book>;
}

export type BookServiceModuleInitializator = (port: RpcServerPort) => Promise<BookService> | BookService

export function registerBookService(port: RpcServerPort, moduleInitializator: BookServiceModuleInitializator): void {
  port.registerModule("BookService", async port => {
    const mod = await moduleInitializator(port);
    return {
      "GetBook": codegen.serverProcedureUnary(mod["GetBook"].bind(mod), "GetBook", s1_pb.GetBookRequest, s1_pb.Book),
      "QueryBooks": codegen.serverProcedureStream(mod["QueryBooks"].bind(mod), "QueryBooks", s1_pb.QueryBooksRequest, s1_pb.Book),
    }
  })
}

